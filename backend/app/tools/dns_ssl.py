import socket
import ssl
import json
import dns.resolver

def ssl_tls_scan(domain):
    try:
        context = ssl.create_default_context()
        conn = context.wrap_socket(socket.socket(socket.AF_INET), server_hostname=domain)
        conn.settimeout(3.0)
        conn.connect((domain, 443))
        cert = conn.getpeercert()
        data = {
            "issuer": dict(x[0] for x in cert['issuer']),
            "subject": dict(x[0] for x in cert['subject']),
            "version": cert['version'],
            "serialNumber": cert['serialNumber'],
            "notBefore": cert['notBefore'],
            "notAfter": cert['notAfter'],
        }
        conn.close()
        return json.dumps(data, indent=4)
    except Exception as e:
        return json.dumps({"error": str(e)}, indent=4)

def dns_records_enumeration(domain):
    try:
        records = {}
        for record_type in ['A', 'AAAA', 'MX', 'NS', 'SOA', 'TXT', 'CNAME']:
            try:
                answers = dns.resolver.resolve(domain, record_type)
                records[record_type] = [str(rdata) for rdata in answers]
            except dns.resolver.NoAnswer:
                records[record_type] = []
        return json.dumps(records, indent=4)
    except Exception as e:
        return json.dumps({"error": str(e)}, indent=4)