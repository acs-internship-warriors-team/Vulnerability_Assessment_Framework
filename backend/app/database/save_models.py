from .models import DomainScanResult
from . import db

def save_scan_result(result_data):
    try:
        # Initialize an empty DomainScanResult object
        scan_result = DomainScanResult()

        # Assign fields if they exist in result_data
        if 'domain' in result_data:
            scan_result.domain = result_data['domain']
        if 'subdomains' in result_data:
            scan_result.subdomains = result_data['subdomains']
        if 'domain_ip_addresses' in result_data:
            scan_result.domain_ip_addresses = result_data['domain_ip_addresses']
        if 'domain_subdomains_ip_addresses' in result_data:
            scan_result.get_domain_subdomains_ip_addresses = result_data['domain_subdomains_ip_addresses']
        if 'virtual_hosts' in result_data:
            scan_result.virtual_hosts = result_data['virtual_hosts']
        if 'api_tokens' in result_data:
            scan_result.api_tokens = result_data['api_tokens']
        if 'vulnerabilities' in result_data:
            scan_result.vulnerabilities = result_data['vulnerabilities']
        if 'who_is' in result_data:
            scan_result.who_is = result_data['who_is']
        if 'reverse_dns_lookup' in result_data:
            scan_result.reverse_dns_lookup = result_data['reverse_dns_lookup']
        if 'ssl_tls_scan' in result_data:
            scan_result.ssl_tls_scan = result_data['ssl_tls_scan']
        if 'dns_records_enumeration' in result_data:
            scan_result.dns_records_enumeration = result_data['dns_records_enumeration']
        if 'port_scan_results' in result_data:
            scan_result.port_scan_results = result_data['port_scan_results']
        if 'service_version_results' in result_data:
            scan_result.service_version_results = result_data['service_version_results']

        # Add to session and commit changes
        db.session.add(scan_result)
        db.session.commit()

        print("Scan result saved successfully.")

        return True, "Scan result saved successfully."
    
    except Exception as e:
        print(e)
        db.session.rollback()
        error_message = f"Error saving scan result: {str(e)}"
        return False, error_message
